<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Domaine extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Domaine_model');
    } 

    /*
     * Listing of t_domaine
     */
    function index()
    {
        $data['t_domaine'] = $this->Domaine_model->get_all_t_domaine();

        // var_dump($_GET['heberg']);
        if (isset($_GET['ip']) ) {
            $ip_addresse = trim($_GET['ip']);
            $this->load->model('Ip_model');
            $current_ip =  $this->Ip_model->get_t_ip_by_adresse($ip_addresse);
          
            if($current_ip)
            {
                $this->load->model('Domaine_theme_ip_model');
                $data['t_domaine']  = $this->Domaine_theme_ip_model->get_t_domaine_by_ip($current_ip['id']); 
            }            
       }  
       if (isset($_GET['heberg']) ) {
            $heberg = trim($_GET['heberg']);
            $domaine_data = $this->Domaine_model->get_by_id_hebergement($heberg);
           
            if($domaine_data)
            {               
                $data['t_domaine']  = $domaine_data; 
            }  
            else
             $data['t_domaine']  = null;       
        }      
        if (isset($_GET['registrar']) ) {
            $registrar = trim($_GET['registrar']);
            $domaine_data = $this->Domaine_model->get_by_id_registrar($registrar);
           
            if($domaine_data)
            {               
                $data['t_domaine']  = $domaine_data; 
            }  
            else
             $data['t_domaine']  = null;       
        }   
        if (isset($_GET['theme']) ) {
            $id_theme = trim($_GET['theme']);
            $this->load->model('Domaine_theme_ip_model');
            $data['t_domaine']  = $this->Domaine_theme_ip_model->get_t_domaine_by_theme_id($id_theme);                        
       }  
      
        $res = array();
        if($data['t_domaine'] != null){

            foreach($data['t_domaine'] as $row) {
        
                $element = new stdClass();
                $element->id = $row['id'];
                $domain = $this->getHost($row['nom']);
                $element->domaine = $domain;
            
                $this->load->model('Type_model');
                $type_obj = $this->Type_model->get_t_type($row['id_type']);    
                $element->type =  $type_obj ['name_type'];
                        
                $this->load->model('Registrar_model');
                $registrar_obj = $this->Registrar_model->get_t_registrar($row['id_registrar']);    
                $element->registrar =  $registrar_obj['name'];
                $element->id_registrar = $row['id_registrar'];
                $element->id_cms = $row['id_cms'];

                $element->heberg = "";
                $element->ip = "";
                $element->cms ="";
                $element->techno = "";
                $element->theme = "";         

                if($row['id_heberg'] != "" && $row['id_heberg'] != null )
                {
                    $this->load->model('Hebergement_model');
                    $heberg_obj = $this->Hebergement_model->get_t_hebergement($row['id_heberg']);    
                    $element->heberg =  $heberg_obj['name'];
                    $element->id_heberg = $row['id_heberg'];                               
                
                    if($row['id_cms'] != "" && $row['id_cms'] != null )
                    {
                        $this->load->model('Cms_model');
                        $cms_obj = $this->Cms_model->get_t_cms($row['id_cms']);    
                        $element->cms =  $cms_obj['type'];
                    }
					
                    $element->ftp_login = $row['ftp_login'];
                    $element->ftp_password = $row['ftp_password'];
                    $element->ftp_server = $row['ftp_server'];
                    $element->admin_url =  $row['admin_url'];
                    $element->admin_login = $row['admin_login'];
                    $element->admin_password = $row['admin_password'];

                    /* plugins */               
                    $this->load->model('Domaine_techno_model');
                    $domaine_techno = $this->Domaine_techno_model->get_t_domaine_techno_by_domaine($row['id']);   
                
                    if($domaine_techno != null )                
                        $element->techno =  $domaine_techno;     
                    
                    /**IP */               
                    $this->load->model('Domaine_theme_ip_model');
                    $domaine_theme_ip = $this->Domaine_theme_ip_model->get_t_domaine_theme_ip_by_domaine($row['id']);
                    if($domaine_theme_ip != null)
                    {
                        $ipid = $domaine_theme_ip["id_ip"];
                        $this->load->model('Ip_model');
                        $domaine_ip = $this->Ip_model->get_t_ip($ipid);
                        $element->ip = $domaine_ip;                    
                    }
                    					
                    $this->load->model('Domaine_theme_ip_model');
                    $domaine_theme = $this->Domaine_theme_ip_model->get_t_domaine_theme_ip_theme_by_domaine($row['id']); 
                    if($domaine_theme != null )                
                        $element->theme =  $domaine_theme;
                        
                }            
                
                $url =  $row['nom'];               

                // $headers = $this->get_contents($url) ;
                // $element->headers  =  "";
                // if( $headers  != null)
                // {
                //     $element->available = "Le domaine est enregistré.";
                //     $element->headers  = substr($headers[0], 9, 3);
                // }
                // else
                //     $element->available = "Le domaine n'est pas enregistré ou inactif.";               

                $res[] = $element;	
            }      
        }   
        $this->load->model('Registrar_model');
        $data['all_t_registrar'] = $this->Registrar_model->get_all_t_registrar();

        $this->load->model('Hebergement_model');
        $data['all_t_hebergement'] = $this->Hebergement_model->get_all_t_hebergement();                

        $this->load->model('Theme_model');
        $data['all_t_theme'] = $this->Theme_model->get_all_t_theme();      

        $this->load->model('Type_model');
        $data['all_t_type'] = $this->Type_model->get_all_t_type();
    
        $this->load->model('Domaine_model');
        $domaine_data = $this->Domaine_model->get_all_t_domaine();
        $data['nb_site'] = ($domaine_data != null && count($domaine_data) >0 ) ? count($domaine_data) : 0;

        $this->load->model('Cms_model');
        $data['all_t_cms'] = $this->Cms_model->get_all_t_cms();

        $data['t_domaine'] = $res;  
        $data['_view'] = 'domaine/index';
        $this->load->view('layouts/main', $data);
     

    }


    function get_contents($url) {

        if(!filter_var($url, FILTER_VALIDATE_URL)){
         
            return null;
        }
        $url_headers = @get_headers($url);
       
        if($url_headers)
            return $url_headers;
      
        return null;
      }

    function isSiteAvailible($url){
        // Check, if a valid url is provided
        if(!filter_var($url, FILTER_VALIDATE_URL)){
            return false;
        }

        $res = [];

        // Initialize cURL
        $curlInit = curl_init($url);
        
        // Set options
        curl_setopt($curlInit,CURLOPT_CONNECTTIMEOUT,10);
        curl_setopt($curlInit,CURLOPT_HEADER,true);
        curl_setopt($curlInit,CURLOPT_NOBODY,true);
        curl_setopt($curlInit,CURLOPT_RETURNTRANSFER,true);
        $status = curl_getinfo($curlInit, CURLINFO_HTTP_CODE); // find HTTP status
        // Get response
        $response = curl_exec($curlInit);
        
        // Close a cURL session
        curl_close($curlInit);
        $res[] =  $response?true:false;
        $res[] =   $status;

        return $res;
    }

    function getHost($Address) {
        $parseUrl = parse_url(trim($Address));      
        if(isset($parseUrl['host'])){
            $host_name = trim($parseUrl['host'] ? $parseUrl['host'] : array_shift(explode('/', $parseUrl['path'], 2)));
            return str_replace('www.', '',  $host_name);
        }           
        else
           return str_replace('www.', '',  $Address);
    }
    
    function is_url($uri){
        if(preg_match( '/^(http:\/\/www\.|https:\/\/www\.|http:\/\/|https:\/\/)?[a-z0-9]+([\-\.]{1}[a-z0-9]+)*\.[a-z]{2,5}(:[0-9]{1,5})?(\/.*)?$/i' ,$uri)){
          return true;
        }
        else{
            return false;
        }
    }

    /*
     * Adding a new t_domaine
     */
    function add()
    {   
        $param = $_POST;     

        if(isset($_POST) && count($_POST) > 0)     
        {     
            if (!$this->is_url($this->input->post('nom')))
            {                  
                $this->bind_domaine(1);              
            }
            if ($this->input->post('id_registrar') == "")
            {     
                $this->bind_domaine(2);              
            }
           elseif($this->is_url($this->input->post('nom'))){
                $today = date("Y-m-d"); 
                $id_heberg = $this->input->post('id_heberg');   
             
                $protocol = 'http://'; 
                $domain =  $protocol.$this->getHost($this->input->post('nom'));  
                $is_ssl = empty($this->input->post('is_ssl')) ? false :true ;
                $is_www = empty($this->input->post('is_www')) ? false :true ;

                if($id_heberg == ""){
                    $params = array(
                        'nom' =>  $domain,
                        'id_type' => $this->input->post('id_type'),
                        'id_registrar' => $this->input->post('id_registrar'),		
                        'date_creation' =>  $today,
                        'is_ssl' => $is_ssl,
				        'is_www' => $is_www
                    );
                }
                else{
                  
                    $params = array(
                        'nom' =>  $domain,   
                        'id_type' => $this->input->post('id_type'),                
                        'id_registrar' => $this->input->post('id_registrar'),
                        'id_heberg' => $this->input->post('id_heberg'),
                        'id_cms' => $this->input->post('id_cms'),
                        'ftp_login' => $this->input->post('ftp_login'),
                        'ftp_password' => $this->input->post('ftp_password'),
                        'ftp_server' => $this->input->post('ftp_server'),
                        'admin_url' => $this->input->post('admin_url'),
                        'admin_login' => $this->input->post('admin_login'),
                        'admin_password' => $this->input->post('admin_password'),                   
                        'date_creation' =>  $today,
                        'is_ssl' => $is_ssl,
				        'is_www' => $is_www
                    );              
                }  

                if($this->Domaine_model->get_t_domaine_by_name($domain) == 0)  
                {
                        $t_domaine_id = $this->Domaine_model->add_t_domaine($params);                        

                        $theme_tags = isset($_COOKIE['theme_tags']) ? $_COOKIE['theme_tags'] : NULL;  
                        $theme_tags_array = null;     
                        if (isset($theme_tags))
                        {			
                            unset($_COOKIE['theme_tags']);
                            setcookie('theme_tags', '', time() - 3600, '/');   
                            if(strpos($theme_tags, ',') !== false) {
                              
                                $theme_tags_array = array_filter(explode(",", $theme_tags)) ;
                              } else { 
                                $theme_tags_array =  $theme_tags ;
                              } 
                        }
                                   
                        if($theme_tags_array != null )     
                        {    
                            if(count($theme_tags_array) > 1)  {
                                foreach($theme_tags_array as $key){  
                                    
                                    $this->load->model('Theme_model');
                                    $theme_obj = $this->Theme_model->get_t_theme_by_name($key);   

                                    if(!isset($theme_obj)){
                                        $params_theme = array(
                                            'name' => $key
                                        );
                                        
                                        $t_theme_id = $this->Theme_model->add_t_theme($params_theme);
                                    }
                                    else
                                        $t_theme_id = $theme_obj['id']; 
                                      
                                        $id_ip = empty($_POST['addr-ip']) ? NULL : $_POST['addr-ip'];   

                                        if( $id_ip || $t_theme_id){
                                            
                                            $params_ip = array(
                                                'id_domaine' => $t_domaine_id,
                                                'id_ip' =>  $id_ip,
                                                'id_theme' => $t_theme_id,
                                            );
                                            $this->load->model('Domaine_theme_ip_model');        
                                            $t_domaine_theme_ip_id = $this->Domaine_theme_ip_model->add_t_domaine_theme_ip($params_ip);                
                                        }          
                                      
                                 }
                            }
                            else{
                                $this->load->model('Theme_model');
                                $theme_obj = $this->Theme_model->get_t_theme_by_name($theme_tags_array);   
                                if(!isset($theme_obj)){
                                    $params_theme = array(
                                        'name' => $theme_tags_array
                                    );
                                    
                                    $t_theme_id = $this->Theme_model->add_t_theme($params_theme);
                                }
                                else
                                    $t_theme_id = $theme_obj['id'];                                                            
                        
                                $id_ip = empty($_POST['addr-ip']) ? NULL : $_POST['addr-ip'];   

                                if( $id_ip || $t_theme_id){
                                    
                                    $params_ip = array(
                                        'id_domaine' => $t_domaine_id,
                                        'id_ip' =>  $id_ip,
                                        'id_theme' => $t_theme_id,
                                    );
                                    $this->load->model('Domaine_theme_ip_model');        
                                    $t_domaine_theme_ip_id = $this->Domaine_theme_ip_model->add_t_domaine_theme_ip($params_ip);                
                                }          
                                
                            }     
                        }
                        else
                        {
                            $id_ip = empty($_POST['addr-ip']) ? NULL : $_POST['addr-ip'];   

                            if( $id_ip){
                                
                                $params_ip = array(
                                    'id_domaine' => $t_domaine_id,
                                    'id_ip' =>  $id_ip,
                                    'id_theme' => null,
                                );
                                $this->load->model('Domaine_theme_ip_model');        
                                $t_domaine_theme_ip_id = $this->Domaine_theme_ip_model->add_t_domaine_theme_ip($params_ip);                
                            }          
                        }
                        
                        $tags = isset($_COOKIE['tags']) ? $_COOKIE['tags'] : NULL;  
                        $techno_array = null;     
                        if (isset($tags))
                        {			
                            unset($_COOKIE['tags']);
                            setcookie('tags', '', time() - 3600, '/');   
                            if(strpos($tags, ',') !== false) {
                              
                                $techno_array = array_filter(explode(",", $tags)) ;
                              } else { 
                                $techno_array =  $tags ;
                              }  
                        }       
                    
                        if($techno_array != null )     
                        {                                       
                            $this->load->model('Domaine_techno_model');      
                            if(count($techno_array) > 1)  {
                                foreach($techno_array as $key){    
                            
                                    $this->load->model('Techno_model');
                                    $t_techno = $this->Techno_model->get_t_techno_by_name($key);
                                    if(!isset($t_techno)){
                                        $params_techno = array(
                                            'name' => $key
                                        );
                                        
                                        $t_techno_id = $this->Techno_model->add_t_techno($params_techno);
                                    }
                                    else
                                        $t_techno_id = $t_techno['id'];
                                  
                                        $params = array(
                                            'id_domaine' => $t_domaine_id,
                                            'id_techno' => $t_techno_id,
                                        );
                                        
                                        $t_domaine_techno_id = $this->Domaine_techno_model->add_t_domaine_techno($params);
                                       
                                        if($is_www) 
                                        { 
                                            $domaine_nom =  $this->getHost( $domain);
                                            $domaine_nom =  "www.". $domaine_nom;  
                                            $protocol = 'http://'; 
                                            $domaine_nom =  $protocol.$domaine_nom;   
                                        }
    
                                        if($is_ssl) {                               
                                            
                                            $domaine_nom  =  str_replace('http', 'https',  $domain);                               
                                        }  
                                        if($is_www || $is_ssl) {
                                            $params_domaine = array(                                
                                                'nom' => $domaine_nom                                
                                            );                    
                                            $this->Domaine_model->update_t_domaine($t_domaine_id,$params_domaine);
                                        }
                                       
                                    
                                }
                            }
                            else
                            {
                                $this->load->model('Techno_model');
                                $t_techno = $this->Techno_model->get_t_techno_by_name($techno_array);
                                if(!isset($t_techno)){
                                    $params_techno = array(
                                        'name' => $techno_array
                                    );
                                    
                                    $t_techno_id = $this->Techno_model->add_t_techno($params_techno);
                                }
                                else
                                    $t_techno_id = $t_techno['id'];
                              
                                $params = array(
                                    'id_domaine' => $t_domaine_id,
                                    'id_techno' => $t_techno_id,
                                );
                                
                                $t_domaine_techno_id = $this->Domaine_techno_model->add_t_domaine_techno($params);

                                if($is_www) 
                                { 
                                    $domaine_nom =  $this->getHost( $domain);
                                    $domaine_nom =  "www.". $domaine_nom;  
                                    $protocol = 'http://'; 
                                    $domaine_nom =  $protocol.$domaine_nom;   
                                }

                                if($is_ssl) {                               
                                    
                                    $domaine_nom  =  str_replace('http', 'https',  $domain);                               
                                }  

                                if($is_www || $is_ssl) {
                                    $params_domaine = array(                                
                                        'nom' => $domaine_nom                                
                                    );                    
                                    $this->Domaine_model->update_t_domaine($t_domaine_id,$params_domaine);
                                }
                                
                            }
                        }
                    
                    redirect('domaine');
                }else{                  

                    $this->bind_domaine(1);
                }
            }
           }           
        else
        {
            $this->bind_domaine(false);
        }
    }  

    function bind_domaine($error){    
        
        if($error == 1)
            $data['error_nom'] = "Ce nom de domaine est invalide ou existe déjà !";  
        if($error == 2)
            $data['error_nom'] = "Le registrar selectionné est invalide !"; 
            
        $this->load->model('Type_model');
        $data['all_t_type'] = $this->Type_model->get_all_t_type();

        $this->load->model('Cms_model');
        $data['all_t_cms'] = $this->Cms_model->get_all_t_cms();

        $this->load->model('Registrar_model');
        $data['all_t_registrar'] = $this->Registrar_model->get_all_t_registrar();

        $this->load->model('Hebergement_model');
        $data['all_t_hebergement'] = $this->Hebergement_model->get_all_t_hebergement();
        
        $this->load->model('Techno_model');
        $data['all_t_techno'] = $this->Techno_model->get_all_t_techno();
        
        $this->load->model('Theme_model');
        $data['all_t_theme'] = $this->Theme_model->get_all_t_theme();
        $data['_view'] = 'domaine/add';
        $this->load->view('layouts/full',$data);
    }

 /*
     * Editing a t_domaine
     */
    function edit($id)
    { 
        // check if the t_domaine exists before trying to edit it
        $data['t_domaine'] = $this->Domaine_model->get_t_domaine($id);
        
        if(isset($data['t_domaine']['id']))
        {
            if(isset($_POST) && count($_POST) > 0)     
            {   
                $is_ssl = $is_www = false;
                if($this->input->post('is_ssl') != null) 
                    $is_ssl = true;
                if($this->input->post('is_www') != null) 
                    $is_www = true;
               
              
                $current_domaine = $data['t_domaine']['nom'];
                
                if(!$is_ssl && !$is_www){
                    $domaine_nom =  $this->getHost( $current_domaine);                   
                    $protocol = 'http://'; 
                    $current_domaine =  $protocol.$domaine_nom;    
                }
                else
                {
                   
                    if($is_ssl) {       
                        $domaine_nom =  $this->getHost( $current_domaine);                    
                        $protocol = 'http://'; 
                        $current_domaine =  $protocol.$domaine_nom;                    
                        $current_domaine  =  str_replace('http', 'https', $current_domaine);
                    }

                    if($is_www) 
                    {
                        $domaine_nom =  $this->getHost( $current_domaine);
                        $domaine_nom  =  "www.". $domaine_nom ;     
                        $protocol = 'http://'; 
                        $current_domaine =  $protocol.$domaine_nom;    
                    } 

                }
                
                $params_domaine = array(                                
                    'nom' => $current_domaine,
                    'id_registrar' => $this->input->post('id_registrar'),					
                    'id_type' => $this->input->post('id_type')	,
                    'is_ssl' => $is_ssl,
                    'is_www' => $is_www
                );   

                $this->Domaine_model->update_t_domaine($id,$params_domaine);    
                       
                
                $theme_tags = isset($_COOKIE['theme_tags']) ? $_COOKIE['theme_tags'] : NULL;  
                $theme_tags_array = null;     
                if (isset($theme_tags))
                {			
                    unset($_COOKIE['theme_tags']);
                    setcookie('theme_tags', '', time() - 3600, '/');   
                    if(strpos($theme_tags, ',') !== false) {
                      
                        $theme_tags_array = array_filter(explode(",", $theme_tags)) ;
                      } else { 
                        $theme_tags_array =  $theme_tags ;
                      } 
                }         
                if($theme_tags_array != null )
                {				
                    if(count($theme_tags_array) > 1 )  { 
                        foreach($theme_tags_array as $key){  
                            
                            $this->load->model('Theme_model');
                            $theme_obj = $this->Theme_model->get_t_theme_by_name($key);   

                            if(isset($theme_obj)){                                      
                                $id_theme  = $theme_obj['id'];  
                               
                                $this->load->model('Domaine_theme_ip_model');
                            
                                /*delete relation */               
                                $t_domaine_theme = $this->Domaine_theme_ip_model->get_t_domaine_theme_ip_by_param_domaine_theme($id,$id_theme);
                                $id_ip =  empty($t_domaine_theme["id_ip"]) ? NULL : $t_domaine_theme["id_ip"];  
                
                                $params_ip = array(
                                    'id_domaine' => $id,
                                    'id_ip' =>  $id_ip,
                                    'id_theme' => $id_theme,
                                );
                               
                                if(isset( $t_domaine_theme) )                                
                                    $this->Domaine_theme_ip_model->delete_t_domaine_theme_ip_by_domaine($id); 

                                $t_domaine_theme_ip_id = $this->Domaine_theme_ip_model->add_t_domaine_theme_ip($params_ip); 
                                     
                            }  
                         }
                    }
                    else{
                        $this->load->model('Theme_model');
                        $theme_obj = $this->Theme_model->get_t_theme_by_name($theme_tags_array);   
						
                        if(isset($theme_obj)){                                      
                            $id_theme  = $theme_obj['id'];   
                            $this->load->model('Domaine_theme_ip_model');
                            
                            /*delete relation */               
                            $t_domaine_theme = $this->Domaine_theme_ip_model->get_t_domaine_theme_ip_by_param_domaine_theme($id,$id_theme);
                            $id_ip =  empty($t_domaine_theme["id_ip"]) ? NULL : $t_domaine_theme["id_ip"];  
            
                            $params_ip = array(
                                'id_domaine' => $id,
                                'id_ip' =>  $id_ip,
                                'id_theme' => $id_theme,
                            );

                            if(isset( $t_domaine_theme) )                            
                                $this->Domaine_theme_ip_model->delete_t_domaine_theme_ip_by_domaine($id); 
                                
                            $t_domaine_theme_ip_id = $this->Domaine_theme_ip_model->add_t_domaine_theme_ip($params_ip);                                  
                        } 
                    }     
                }      

                redirect('domaine');
            }
            else
            {
                $data['nom'] =  $this->getHost( $data['t_domaine']['nom']);
				$this->load->model('Registrar_model');
				$data['all_t_registrar'] = $this->Registrar_model->get_all_t_registrar();

				$this->load->model('Type_model');
                $data['all_t_type'] = $this->Type_model->get_all_t_type();                
                      
                $this->load->model('Domaine_theme_ip_model');
                 $domaine_theme = $this->Domaine_theme_ip_model->get_t_domaine_theme_ip_theme_by_domaine($id);   
               
                if($domaine_theme != null )                
                $data['all_theme'] =  $domaine_theme;                  
             
                $data['_view'] = 'domaine/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The t_domaine you are trying to edit does not exist.');
    }     

     /*
     * Editing a t_domaine ip
     */
    function edit_ip()
    {   
        $param = $_POST;
        $id = $param["ndd_id"];
      
        $row  =   $this->Domaine_model->get_t_domaine($id);
        $element = $this->get_current_domaine($row);
        $data['t_domaine'] =   $element;
		

        if(isset( $element->id))
        {
                $today = date("Y-m-d");                 
                $params = array(
                    'id_cms' => $element->id_cms,
                    'id_registrar' => $element->id_registrar,
                    'id_heberg' =>  $param["heberg"],
                    'ftp_login' => $element->ftp_login,
                    'ftp_password' => $element->ftp_password,
                    'ftp_server' => $element->ftp_server,
                    'admin_url' => $element->admin_url,
                    'admin_login' =>  $element->admin_login,
                    'admin_password' =>  $element->admin_password,
                    'nom' => $element->nom,
                    'date_creation' => $today,
                 );
                $this->Domaine_model->update_t_domaine($id,$params);   
                /**ajout ip */               
                $id_ip = empty($param["ip"]) ? NULL : $param["ip"];   

				$this->load->model('Domaine_theme_ip_model');          
				$t_domaine_theme = $this->Domaine_theme_ip_model->get_t_domaine_theme_ip_by_param($element->id);
				
				if(isset($t_domaine_theme)){
                    foreach($t_domaine_theme as $theme){
                        $id_theme = $theme["id_theme"];
                        $params_ip = array(
                            'id_domaine' => $element->id,
                            'id_ip' =>  $id_ip,
                            'id_theme' => $id_theme,
                        );
                        if(!empty( $param["ip"]) )
                        {
                            $this->Domaine_theme_ip_model->update_t_domaine_theme_ip($theme["id"],$params_ip);							
                        }  
											
                    }
				}				
				if(count($t_domaine_theme) == 0){
					$params_ip = array(
						'id_domaine' => $element->id,
						'id_ip' =>  $id_ip                          
					);
					$t_domaine_theme_ip_id = $this->Domaine_theme_ip_model->add_t_domaine_theme_ip($params_ip);					
				}	
                echo "index";
                die; 
        }
        echo "no-index";
       die; 
    } 

    /*
     * Editing a t_domaine
     */
    function edit_acces()
    {             
        $param = $_POST;
        $id = $param["ndd_id"];

        $row  =   $this->Domaine_model->get_t_domaine($id);
        $element = $this->get_current_domaine($row);
        $data['t_domaine'] =   $element;
      
        if(isset($element->id))
        {                 
            $techno_array = empty($param["techno_list"]) ? NULL :  $param["techno_list"];
            if($techno_array != null)
            {  
                if(count($techno_array) > 1)     
                {              
                    $this->load->model('Domaine_techno_model');
                    
                    if($element->techno != "")
                    { 
                        $this->Domaine_techno_model->delete_t_domaine_techno_by_domaine($element->techno[0]['id_domaine']);  
                    }
                   
                    foreach($techno_array as $key){   
                        
                        $this->load->model('Techno_model');
                        $t_techno = $this->Techno_model->get_t_techno_by_name($key);
                      
                        if(!isset($t_techno)){
                            $params_techno = array(
                                'name' => $key
                            );
                            
                            $t_techno_id = $this->Techno_model->add_t_techno($params_techno);
                        }
                        else
                            $t_techno_id = $t_techno['id'];
                        
                        $params = array(
                            'id_domaine' => $element->id,
                            'id_techno' => $t_techno_id 
                        );                                
                        $t_domaine_techno_id = $this->Domaine_techno_model->add_t_domaine_techno($params);                            
                        
                    }
                }
                else
                {
                    $this->load->model('Techno_model');
                    $techno_array = $techno_array[0];
                    $t_techno = $this->Techno_model->get_t_techno_by_name($techno_array);
                 
                    if(!isset($t_techno)){
                        $params_techno = array(
                            'name' => $techno_array
                        );
                        
                        $t_techno_id = $this->Techno_model->add_t_techno($params_techno);
                    }
                    else
                        $t_techno_id = $t_techno['id'];
                    
                    $params = array(
                        'id_domaine' => $element->id,
                        'id_techno' => $t_techno_id 
                    );                                
                    $t_domaine_techno_id = $this->Domaine_techno_model->add_t_domaine_techno($params);  
                }   
            
            }           

            $today = date("Y-m-d"); 
            $params = array(
                'id_cms' => $param["cms"],
                'id_registrar' =>$element->id_registrar,
                'id_heberg' => $element->id_heberg,
                'ftp_login' => $param["ftp_login"],
                'ftp_password' => $param["ftp_password"],
                'ftp_server' => $param["ftp_server"],
                'admin_url' => $param["admin_url"],
                'admin_login' => $param["admin_login"],
                'admin_password' =>  $param["admin_password"],
                'nom' => $element->nom,
                'date_creation' => $today,
            );

            $this->Domaine_model->update_t_domaine($id,$params); 

            echo "index";
            die; 
        }
        echo "no-index";
        die; 
    } 

    function get_current_domaine($row){       
        $element = new stdClass();
        $element->id = $row['id'];
        $element->nom =  $row['nom'];  
        $element->id_registrar = $row['id_registrar'];  
        $element->id_heberg = $row['id_heberg'];               
        $element->id_cms = $row['id_cms'];
        $element->techno = "";
        $element->theme = "";
        /** theme */               
        $this->load->model('Domaine_theme_ip_model');
        $domaine_theme = $this->Domaine_theme_ip_model->get_t_domaine_theme_ip_theme_by_domaine($row['id']);   
    
        if($domaine_theme != null )                
            $element->theme =  $domaine_theme;   

        $element->ftp_login = $row['ftp_login'];
        $element->ftp_password = $row['ftp_password'];
        $element->ftp_server = $row['ftp_server'];
        $element->admin_url =  $row['admin_url'];
        $element->admin_login = $row['admin_login'];
        $element->admin_password = $row['admin_password'];

        /* plugins */               
        $this->load->model('Domaine_techno_model');
        $domaine_techno = $this->Domaine_techno_model->get_t_domaine_techno_by_domaine($row['id']); 
        if($domaine_techno != null )                
            $element->techno =  $domaine_techno;    
           
        $element->ip = ""; 
        /**IP */               
        $this->load->model('Domaine_theme_ip_model');
        $domaine_ip = $this->Domaine_theme_ip_model->get_t_domaine_theme_ip_by_domaine($row['id']);   
    
        if($domaine_ip != null )                
            $element->ip =  $domaine_ip;   

        return  $element;
    }

    /*
     * Deleting t_domaine
     */
    function delete_domaine()
    {
        $param = $_POST;
        $id = $param["ndd_id"];

        // check if the t_domaine exists before trying to delete it
        if(isset($id))
        {
            remove($id);
            echo 'remove';
            die;
        }
        else
            show_error('The t_domaine you are trying to delete does not exist.');
    }

    /*
     * Deleting t_domaine
     */
    function remove($id)
    {
        $t_domaine = $this->Domaine_model->get_t_domaine($id);

        // check if the t_domaine exists before trying to delete it
        if(isset($t_domaine['id']))
        {
            $this->Domaine_model->delete_t_domaine($id);
            redirect('domaine');
        }
        else
            show_error('The t_domaine you are trying to delete does not exist.');
    }

    function get_autocomplete_theme(){       
        if (isset($_GET['term'])) {
            $this->load->model('Theme_model');
            $result = $this->Theme_model->suggested_theme($_GET['term']);           
            echo json_encode($result);            
        }
    }

    private function knatsort(&$array) {
        $keys = array_keys($array);
        natsort($keys);
        $new_sort = array();
        foreach ($keys as $keys_2) {
            $new_sort[$keys_2] = $array[$keys_2];
        }
        $array = $new_sort;
        return true;
    }

    function get_select_ip(){
    
        if (isset($_GET['id_heberg'])) {
            $this->load->model('Ip_model');
            $ip_data = $this->Ip_model->get_by_id_hebergement($_GET['id_heberg']);
            $this->knatsort($ip_data);
            $ips = array();
            foreach($ip_data as $key):
                
                $a = array(
                    'id' => trim($key->id),
                    'label' => trim($key->adresse),
                    'value' => trim($key->adresse)
                );
                
                $ips[trim($key->adresse)] = $a;
            endforeach;
            $this->knatsort($ips);
            echo json_encode($ips);
            die;       
           
        }
    }

    function get_theme_list(){  
        /* plugins */               
        $this->load->model('Theme_model');
        $theme = $this->Theme_model->get_all_t_theme();
        $themes = array();
        foreach($theme as $key):    
           
            $a = array(
                'id' => trim($key['id']),
                'label' => trim($key['name']),
                'value' => trim($key['name'])
            );

            $themes[] = $a;
        endforeach;
        echo json_encode( $themes);
        die;        
    }

    function get_techno_list(){  
        /* plugins */               
        $this->load->model('Techno_model');
        $techno = $this->Techno_model->get_all_t_techno();
        $technos = array();
        foreach($techno as $key):    
           
            $a = array(
                'id' => trim($key['id']),
                'label' => trim($key['name']),
                'value' => trim($key['name'])
            );

            $technos[] = $a;
        endforeach;
        echo json_encode( $technos);
        die;        
    }

    function get_by_domaine(){
   
        if (isset($_GET['id'])) {

            $t_domaine = $this->Domaine_model->get_t_domaine($_GET['id']);
            $domaine_techno = "";
            if(isset($t_domaine['id_cms']))
            {
                $this->load->model('Cms_model');
                $t_cms = $this->Cms_model->get_t_cms($t_domaine['id_cms']);
                $type = $t_cms['type'];
                if (isset($type) && strpos(strtolower($type), 'html') !== false){
                    echo json_encode( $t_domaine);                    
                }
                
                die;
            }
            echo json_encode( $domaine_techno);
           die;
        }
    }

       
    function get_techno_by_domaine(){
   
        if (isset($_GET['id'])) {          
                
            /* plugins */               
            $this->load->model('Domaine_techno_model');
            $domaine_techno = $this->Domaine_techno_model->get_t_domaine_cms_by_domaine($_GET['id']);  
		
			if(empty($domaine_techno))
			{	
				
				$t_domaine = $this->Domaine_model->get_t_domaine($_GET['id']);
				
				if(isset($t_domaine['id_cms']))
				{					
					$domaine_techno = $t_domaine;  
				}
			}
		
			echo json_encode( $domaine_techno);		
            die;
        }
    }

    function get_ip_info_by_domaine(){
   
        if (isset($_GET['id'])) {
            $ip_addresse = trim($_GET['id']);
            $this->load->model('Ip_model');
            $current_ip =  $this->Ip_model->get_t_ip_by_adresse($ip_addresse);
            if($current_ip){
                $this->load->model('Domaine_theme_ip_model');
                $domaine_theme["themes"]  = $this->Domaine_theme_ip_model->get_t_domaine_theme_ip_theme_by_ip($current_ip['id']);  
				var_dump($domaine_theme["themes"]);die;				
               
                $domaine_ip = $this->Domaine_theme_ip_model->get_t_domaine_theme_ip_by_ip($current_ip['id']);   
             
                $domaine_theme["nb_site"] = ($domaine_ip != null && count($domaine_ip) >0 ) ? count($domaine_ip) : 0; 
               
                echo json_encode($domaine_theme);
            }else{
                $domaine_theme["nb_site"] = 0;
                echo json_encode($domaine_theme);
            }
            die;
           
        }
    }

      /*
     * Adding a new t_cms_techno
     */
    function autos()
    {       
        $this->load->model('Cms_model');
        $data['all_t_cms'] = $this->Cms_model->get_all_t_cms();

        $this->load->model('Registrar_model');
        $data['all_t_registrar'] = $this->Registrar_model->get_all_t_registrar();

        $this->load->model('Hebergement_model');
        $data['all_t_hebergement'] = $this->Hebergement_model->get_all_t_hebergement();
        
        $this->load->model('Techno_model');
        $data['all_t_techno'] = $this->Techno_model->get_all_t_techno();
        
        $this->load->model('Theme_model');
        $data['all_t_theme'] = $this->Theme_model->get_all_t_theme();
        $data['_view'] = 'domaine/autos';
        $this->load->view('layouts/full',$data);
        
    }  

    function get_domaine_by_month(){  

        /* plugins */               
        $this->load->model('Techno_model');
        $domaine = $this->Domaine_model->get_domaine_by_month();
        $domaines = array();
        setlocale (LC_TIME, 'fr_FR.utf8','fra'); 
               
        $months = [1 => 'January' ,  2 =>  'February',  3 => 'March', 4 => 'April' ,  5 =>  'May',  6 => 'June', 7 => 'July', 8 => 'August' ,  9 =>  'September',  10 => 'October',11 => 'November' ,  12 =>  'December'];
      
        foreach($domaine as $key){            
            $mois = strftime("%B", strtotime(trim($key->mois)));    
           
            if (array_key_exists(intval(trim($key->mois)), $months)) {      
                $a = trim($key->nb);              
                $domaines[intval(trim($key->mois))] = $a; 
            } 
        }  
     
        foreach ($months as $key => $value){       
           if (!array_key_exists($key, $domaines)) {  
                $b = 0;
                $domaines[$key] = $b; 
            }          
        }

        $this->knatsort($domaines);
        echo json_encode( $domaines, JSON_UNESCAPED_UNICODE );
        die;   
    }

    function get_domain_status(){  

        if (isset($_GET['id'])) {
            $id = trim($_GET['id']);
            $dataUrl =  $this->Domaine_model->get_t_domaine($id);
            $url =  $dataUrl['nom'];        

            $headers = $this->get_contents($url) ;
            $resultat  =  "";

            if( $headers != null)
            {
                $resultat  = substr($headers[0], 9, 3);
            }
           
            echo json_encode( $resultat);
            die;
        }
    }
    
}
